// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  picture   String?  @default("https://res.cloudinary.com/dr1giexhn/image/upload/v1715435659/userProfile/pfp_ehyg3e.png")
  password  String
  updatedAt DateTime @updatedAt()
  createdAt DateTime @default(now())
}

enum Gender {
  Men
  Women
}

model Products {
  id          String            @id @default(uuid())
  name        String
  description String
  price       Float
  stock       Int
  gender      Gender
  category_id Int
  is_deleted  Boolean           @default(false)
  view        Boolean           @default(true)
  updatedAt   DateTime          @updatedAt()
  createdAt   DateTime          @default(now())
  category    Categories        @relation(fields: [category_id], references: [category_id])
  variants    ProductVariants[]
}

model Categories {
  category_id   Int        @id @default(autoincrement())
  category_name String
  products      Products[]
}

model ProductVariants {
  id         Int             @id @default(autoincrement())
  color      String
  product    Products        @relation(fields: [product_id], references: [id])
  product_id String
  sizes      ProductSizes[]
  images     ProductImages[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductSizes {
  id        Int             @id @default(autoincrement())
  size      String
  stock     Int
  variant   ProductVariants @relation(fields: [variantId], references: [id])
  variantId Int
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model ProductImages {
  id        Int             @id @default(autoincrement())
  url       String
  variant   ProductVariants @relation(fields: [variantId], references: [id])
  variantId Int
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}
